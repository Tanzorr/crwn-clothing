{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport ShopActionTypes from \"./shop.type\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetchCollectinsFailure, fetchCollectionsStart, fetchCollectionsSuccess } from \"./shop.actions\";\nexport function* fetchColletctionsAsync() {\n  yield console.log(\"I am fired\");\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n  } catch (error) {} // collectionRef.get()\n  //     .then(async snapshot=>{\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n  //     dispatch(fetchCollectionsSuccess(collectionsMap))\n  // }).catch(error=>dispatch(fetchCollectinsFailure(error.message)))\n\n}\nexport function* fetchCollectinsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchColletctionsAsync);\n}","map":{"version":3,"sources":["/home/alexx84/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectinsFailure","fetchCollectionsStart","fetchCollectionsSuccess","fetchColletctionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectinsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAkBC,IAAlB,QAA6B,oBAA7B;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,+BAAzD;AACA,SAAQC,sBAAR,EAAgCC,qBAAhC,EAAuDC,uBAAvD,QAAqF,gBAArF;AAEA,OAAO,UAAUC,sBAAV,GAAmC;AACtC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AACA,MAAI;AACA,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACE,+BAAD,EAAiCU,QAAjC,CAAjC;AACH,GAJD,CAIC,OAAOG,KAAP,EAAc,CAEd,CARqC,CAUtC;AACA;AACA;AACA;AACA;;AACH;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAOjB,SAAS,CAACE,eAAe,CAACgB,uBAAjB,EACZV,sBADY,CAAhB;AAEH","sourcesContent":["import {takeEvery,call} from 'redux-saga/effects'\n\nimport ShopActionTypes from \"./shop.type\";\nimport {convertCollectionsSnapshotToMap, firestore} from \"../../firebase/firebase.utils\";\nimport {fetchCollectinsFailure, fetchCollectionsStart, fetchCollectionsSuccess} from \"./shop.actions\";\n\nexport function* fetchColletctionsAsync() {\n    yield console.log(\"I am fired\")\n    try {\n        const collectionRef = firestore.collection('collections')\n        const snapshot = yield collectionRef.get()\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap,snapshot) \n    }catch (error) {\n        \n    }\n   \n    // collectionRef.get()\n    //     .then(async snapshot=>{\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n    //     dispatch(fetchCollectionsSuccess(collectionsMap))\n    // }).catch(error=>dispatch(fetchCollectinsFailure(error.message)))\n}\n\nexport function* fetchCollectinsStart() {\n    yield  takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchColletctionsAsync)\n}"]},"metadata":{},"sourceType":"module"}