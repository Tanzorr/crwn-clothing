{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from \"./shop.type\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetchCollectinsFailure, fetchCollectionsStart, fetchCollectionsSuccess } from \"./shop.actions\";\nexport function* fetchColletctionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectinsFailure(error.message));\n  }\n}\nexport function* fetchCollectinsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchColletctionsAsync);\n}","map":{"version":3,"sources":["/home/alexx84/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectinsFailure","fetchCollectionsStart","fetchCollectionsSuccess","fetchColletctionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectinsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAkBC,IAAlB,EAAuBC,GAAvB,QAAiC,oBAAjC;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,+BAAzD;AACA,SAAQC,sBAAR,EAAgCC,qBAAhC,EAAuDC,uBAAvD,QAAqF,gBAArF;AAEA,OAAO,UAAUC,sBAAV,GAAmC;AACtC,MAAI;AACA,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACG,+BAAD,EAAiCQ,QAAjC,CAAjC;AACA,UAAMV,GAAG,CAACM,uBAAuB,CAACM,cAAD,CAAxB,CAAT;AACH,GALD,CAKC,OAAOC,KAAP,EAAc;AACX,UAAMb,GAAG,CAACI,sBAAsB,CAACS,KAAK,CAACC,OAAP,CAAvB,CAAT;AACH;AAEJ;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAOjB,SAAS,CAACG,eAAe,CAACe,uBAAjB,EACZT,sBADY,CAAhB;AAEH","sourcesContent":["import {takeEvery,call,put} from 'redux-saga/effects'\n\nimport ShopActionTypes from \"./shop.type\";\nimport {convertCollectionsSnapshotToMap, firestore} from \"../../firebase/firebase.utils\";\nimport {fetchCollectinsFailure, fetchCollectionsStart, fetchCollectionsSuccess} from \"./shop.actions\";\n\nexport function* fetchColletctionsAsync() {\n    try {\n        const collectionRef = firestore.collection('collections')\n        const snapshot = yield collectionRef.get()\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap,snapshot)\n        yield put(fetchCollectionsSuccess(collectionsMap))\n    }catch (error) {\n        yield put(fetchCollectinsFailure(error.message))\n    }\n\n}\n\nexport function* fetchCollectinsStart() {\n    yield  takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchColletctionsAsync)\n}"]},"metadata":{},"sourceType":"module"}