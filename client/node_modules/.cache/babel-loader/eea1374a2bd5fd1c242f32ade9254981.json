{"ast":null,"code":"import firebase, { initializeApp } from \"firebase\";\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyADn49JKnEtaR2gHKaNdan1hmue9ZX6oa0\",\n  authDomain: \"crown-db-6333d.firebaseapp.com\",\n  databaseURL: \"https://crown-db-6333d.firebaseio.com\",\n  projectId: \"crown-db-6333d\",\n  storageBucket: \"crown-db-6333d.appspot.com\",\n  messagingSenderId: \"98584581238\",\n  appId: \"1:98584581238:web:83060d9d5bdee97ad03b57\",\n  measurementId: \"G-9WFJ5Z3210\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firestore.collection('user'); // console.log(\"Fire store\",userRef)\n\n  const snapShot = await userRef.get();\n  const collectionSnapshot = await collectionRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithCoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/home/alexx84/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","initializeApp","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionRef","collection","snapShot","get","collectionSnapshot","exists","displayName","email","createAt","Date","set","error","console","log","message","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithCoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,IAAkBC,aAAlB,QAAsC,UAAtC;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAE;AACVC,EAAAA,MAAM,EAAE,yCADE;AAEVC,EAAAA,UAAU,EAAE,gCAFF;AAGVC,EAAAA,WAAW,EAAE,uCAHH;AAIVC,EAAAA,SAAS,EAAE,gBAJD;AAKVC,EAAAA,aAAa,EAAE,4BALL;AAMVC,EAAAA,iBAAiB,EAAE,aANT;AAOVC,EAAAA,KAAK,EAAE,0CAPG;AAQVC,EAAAA,aAAa,EAAE;AARL,CAAd;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAkC;AACvE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqB,MAArB,CAAtB,CAJuE,CAKxE;;AAEE,QAAMC,QAAQ,GAAG,MAAMN,OAAO,CAACO,GAAR,EAAvB;AACD,QAAMC,kBAAkB,GAAG,MAAMJ,aAAa,CAACG,GAAd,EAAjC;;AAIA,MAAI,CAACD,QAAQ,CAACG,MAAd,EAAqB;AACjB,UAAM;AAACC,MAAAA,WAAD;AAAaC,MAAAA;AAAb,QAAoBb,QAA1B;AACA,UAAMc,QAAQ,GAAE,IAAIC,IAAJ,EAAhB;;AAEA,QAAI;AACA,YAAMb,OAAO,CAACc,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,QAHc;AAId,WAAGb;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOC,OAAOgB,KAAP,EAAc;AAEXC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACH;AACJ;;AACD,SAAOlB,OAAP;AAEH,CA9BM;AAiCPd,QAAQ,CAACC,aAAT,CAAuBC,MAAvB;AAEA,OAAO,MAAM+B,IAAI,GAAEjC,QAAQ,CAACiC,IAAT,EAAZ;AACP,OAAO,MAAMlB,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AAEP,MAAMmB,QAAQ,GAAG,IAAIlC,QAAQ,CAACiC,IAAT,CAAcE,kBAAlB,EAAjB;AAEAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAIL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA7B;AAGP,eAAelC,QAAf","sourcesContent":["import firebase, {initializeApp} from \"firebase\";\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst config ={\n    apiKey: \"AIzaSyADn49JKnEtaR2gHKaNdan1hmue9ZX6oa0\",\n    authDomain: \"crown-db-6333d.firebaseapp.com\",\n    databaseURL: \"https://crown-db-6333d.firebaseio.com\",\n    projectId: \"crown-db-6333d\",\n    storageBucket: \"crown-db-6333d.appspot.com\",\n    messagingSenderId: \"98584581238\",\n    appId: \"1:98584581238:web:83060d9d5bdee97ad03b57\",\n    measurementId: \"G-9WFJ5Z3210\"\n}\n\nexport const createUserProfileDocument = async (userAuth, additionalData)=>{\n    if(!userAuth) return ;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\n    const collectionRef = firestore.collection('user')\n   // console.log(\"Fire store\",userRef)\n\n     const snapShot = await userRef.get()\n    const collectionSnapshot = await collectionRef.get()\n\n\n\n    if (!snapShot.exists){\n        const {displayName,email}=userAuth\n        const createAt =new Date()\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createAt,\n                ...additionalData\n            })\n        }catch (error) {\n\n            console.log('error creating user', error.message)\n        }\n    }\n    return userRef\n\n}\n\n\nfirebase.initializeApp(config)\n\nexport const auth =firebase.auth()\nexport const firestore = firebase.firestore()\n\nconst provider = new firebase.auth.GoogleAuthProvider()\n\nprovider.setCustomParameters({prompt:'select_account'})\n\nexport const signInWithCoogle = ()=>auth.signInWithPopup(provider)\n\n\nexport default firebase\n"]},"metadata":{},"sourceType":"module"}