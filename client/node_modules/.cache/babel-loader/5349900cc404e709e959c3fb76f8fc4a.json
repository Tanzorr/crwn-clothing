{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from \"./shop.type\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetchCollectinsFailure, fetchCollectionsStart, fetchCollectionsSuccess } from \"./shop.actions\";\nexport function* fetchColletctionsAsync() {\n  yield console.log(\"I am fired\");\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(async snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectinsFailure(error.message)));\n}\nexport function* fetchCollectinsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchColletctionsAsync);\n}","map":{"version":3,"sources":["/home/alexx84/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectinsFailure","fetchCollectionsStart","fetchCollectionsSuccess","fetchColletctionsAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","catch","error","message","fetchCollectinsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,oBAAxB;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,+BAAzD;AACA,SAAQC,sBAAR,EAAgCC,qBAAhC,EAAuDC,uBAAvD,QAAqF,gBAArF;AAEA,OAAO,UAAUC,sBAAV,GAAmC;AACtC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACA,QAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AAEAD,EAAAA,aAAa,CAACE,GAAd,GACKC,IADL,CACU,MAAMC,QAAN,IAAgB;AACtB,UAAMC,cAAc,GAAGb,+BAA+B,CAACY,QAAD,CAAtD;AACAE,IAAAA,QAAQ,CAACV,uBAAuB,CAACS,cAAD,CAAxB,CAAR;AACH,GAJD,EAIGE,KAJH,CAISC,KAAK,IAAEF,QAAQ,CAACZ,sBAAsB,CAACc,KAAK,CAACC,OAAP,CAAvB,CAJxB;AAKH;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAOpB,SAAS,CAACC,eAAe,CAACoB,uBAAjB,EACZd,sBADY,CAAhB;AAEH","sourcesContent":["import {takeEvery} from 'redux-saga/effects'\n\nimport ShopActionTypes from \"./shop.type\";\nimport {convertCollectionsSnapshotToMap, firestore} from \"../../firebase/firebase.utils\";\nimport {fetchCollectinsFailure, fetchCollectionsStart, fetchCollectionsSuccess} from \"./shop.actions\";\n\nexport function* fetchColletctionsAsync() {\n    yield console.log(\"I am fired\")\n    const collectionRef = firestore.collection('collections')\n\n    collectionRef.get()\n        .then(async snapshot=>{\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n        dispatch(fetchCollectionsSuccess(collectionsMap))\n    }).catch(error=>dispatch(fetchCollectinsFailure(error.message)))\n}\n\nexport function* fetchCollectinsStart() {\n    yield  takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchColletctionsAsync)\n}"]},"metadata":{},"sourceType":"module"}